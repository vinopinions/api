name: Release
on:
  push:
    branches: ['developer', 'master']

permissions:
  contents: read # for checkout

env:
  SEMANTIC_RELEASE_VERSION: 23

jobs:
  codeql:
    uses: ./.github/workflows/codeql.yml
    permissions:
      actions: read
      security-events: write
      contents: read

  eslint:
    uses: ./.github/workflows/eslint.yml
    permissions:
      security-events: write
      contents: read

  test-unit:
    uses: ./.github/workflows/unit-test.yml

  test-e2e:
    uses: ./.github/workflows/e2e-test.yml

  release:
    name: Release Github
    runs-on: ubuntu-latest

    needs:
      - codeql
      - eslint
      - test-e2e
      - test-unit

    outputs:
      version: ${{ steps.check_version.outputs.RELEASE_VERSION }}
      releaseCommitSha: ${{ steps.get_release_commit_sha.outputs.RELEASE_COMMIT_SHA }}

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ vars.RELEASE_BOT_ID }}
          private_key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Setup yarn
        uses: ./.github/actions/setup-yarn
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install --immutable

      - name: Check version
        id: check_version
        run: echo "RELEASE_VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | awk '{print $NF}')" >> $GITHUB_OUTPUT

      - name: Release version
        env:
          BRANCH_NAME: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: npx semantic-release

      # store the commit hash of the release commit for later workflows to verify the correct version
      - name: Get Release Commit Sha
        id: get_release_commit_sha
        run: echo "RELEASE_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  publish_docker:
    name: Publish Docker
    runs-on: ubuntu-latest

    needs:
      - release

    permissions:
      packages: write

    # check if a new version should be released
    if: needs.release.outputs.version != ''

    environment:
      name: ${{ contains(github.ref_name, 'master') && 'production' || 'dev' }}

    env:
      DOCKER_REGISTRY: ghcr.io

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # use the commit hash of the release commit to verify the correct version
          ref: ${{ needs.release.outputs.releaseCommitSha }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}
          tags: |
            ${{ vars.DOCKER_IMAGE_TAG }}
            ${{ needs.release.outputs.version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy Server
    runs-on: ubuntu-latest
    needs:
      - publish_docker

    environment:
      name: ${{ contains(github.ref_name, 'master') && 'production' || 'dev' }}

    steps:
      - name: executing release command
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_DEPLOYMENT_HOST }}
          username: ${{ secrets.SSH_DEPLOYMENT_USERNAME }}
          key: ${{ secrets.SSH_DEPLOYMENT_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_DEPLOYMENT_PRIVATE_KEY_PASSPHRASE }}
          script: cd ${{ secrets.SSH_DEPLOYMENT_PATH }} && ./${{ secrets.SSH_DEPLOYMENT_SCRIPT }}
